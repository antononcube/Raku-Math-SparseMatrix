use v6.d;

use lib <. lib>;
use Math::SparseMatrix;
use Math::SparseMatrix::CSR;
use Math::SparseMatrix::Utilities;
use Test;

my $nrow = 5;
my $ncol = 8;
my $density = 0.25;
my $tol = 0.01;

plan *;

## 1
my $matrix1 = generate-random-sparse-matrix(:$nrow, :$ncol, :$density, :$tol):!decorated;
isa-ok
        $matrix1,
        Math::SparseMatrix::CSR,
        "Expected type after creation";

## 5
ok Math::SparseMatrix.new($matrix1);

## 6
isa-ok Math::SparseMatrix.new($matrix1), Math::SparseMatrix:D;

## 7
isa-ok Math::SparseMatrix.new($matrix1, row-names => Whatever, column-names => ('A' .. 'Z').head($ncol)),
        Math::SparseMatrix:D;

## 8
ok Math::SparseMatrix.new(core-matrix => $matrix1, row-names => 'a' .. 'e', column-names => 'A' .. 'H');

## 9
my $smat9 = Math::SparseMatrix.new($matrix1);
isa-ok
        Math::SparseMatrix.new(core-matrix => $smat9, row-names => 'a' .. 'e', column-names => 'A' .. 'H'),
        Math::SparseMatrix:D;

done-testing;
